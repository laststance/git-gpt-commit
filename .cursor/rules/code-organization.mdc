---
description: 
globs: 
alwaysApply: true
---
# Code Organization

## Core Functionality

The core functionality of git-gpt-commit is organized as follows:

- [index.js](mdc:index.js) - Main entry point with the following key functions:
  - `getGitSummary()` - Gets the git diff summary of staged changes
  - `gptCommit()` - Generates a commit message using OpenAI API
  - `gitExtension()` - Sets up the CLI commands

## Utility Functions

- [utils/sanitizeCommitMessage.js](mdc:utils/sanitizeCommitMessage.js) - Cleans up generated commit messages

## Tests

- [utils/sanitizeCommitMessage.test.js](mdc:utils/sanitizeCommitMessage.test.js) - Tests for the sanitize function
- [vitest.config.js](mdc:vitest.config.js) - Test configuration

## Configuration

The application uses the following configuration mechanisms:

1. Environment variables (.env file) for the OpenAI API key
2. Local config file (~/.git-gpt-commit-config.json) for user preferences
3. Command-line options via Commander.js
